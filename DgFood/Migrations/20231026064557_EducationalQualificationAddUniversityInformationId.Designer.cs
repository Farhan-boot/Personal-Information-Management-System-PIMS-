// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PTSL.DgFood.Common.Entity;

namespace PTSL.DgFood.Api.Migrations
{
    [DbContext(typeof(DgFoodWriteOnlyCtx))]
    [Migration("20231026064557_EducationalQualificationAddUniversityInformationId")]
    partial class EducationalQualificationAddUniversityInformationId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.AccessMapper", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessList")
                        .IsRequired()
                        .HasColumnName("AccessList")
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte>("IsVisible")
                        .HasColumnName("IsVisible")
                        .HasColumnType("tinyint");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<byte>("RoleStatus")
                        .HasColumnName("RoleStatus")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("AccessMapper","System");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.Accesslist", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("AccessStatus")
                        .HasColumnName("AccessStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasColumnName("ActionName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("BaseModule")
                        .HasColumnName("BaseModule")
                        .HasColumnType("int");

                    b.Property<int?>("BaseModuleIndex")
                        .HasColumnName("BaseModuleIndex")
                        .HasColumnType("int");

                    b.Property<string>("ControllerName")
                        .IsRequired()
                        .HasColumnName("ControllerName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("IconClass")
                        .IsRequired()
                        .HasColumnName("IconClass")
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte>("IsVisible")
                        .HasColumnName("IsVisible")
                        .HasColumnType("tinyint");

                    b.Property<string>("Mask")
                        .IsRequired()
                        .HasColumnName("Mask")
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("Accesslist","System");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.BdArmy.Routes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsArrived")
                        .HasColumnName("IsArrived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JsonFileName")
                        .HasColumnName("JsonFileName")
                        .HasColumnType("nvarchar(250)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasColumnName("SessionId")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SessionName")
                        .IsRequired()
                        .HasColumnName("SessionName")
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("UserId")
                        .HasColumnName("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Routes","BdArmy");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.BdArmy.RoutesDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnName("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("EndTime")
                        .HasColumnName("EndTime")
                        .HasColumnType("float");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsArrived")
                        .HasColumnName("IsArrived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("Latitude")
                        .HasColumnName("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnName("Longitude")
                        .HasColumnType("float");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("PlaceName")
                        .IsRequired()
                        .HasColumnName("PlaceName")
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("Radius")
                        .HasColumnName("Radius")
                        .HasColumnType("float");

                    b.Property<long>("RoutesId")
                        .HasColumnName("RoutesId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnName("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("StartTime")
                        .HasColumnName("StartTime")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("RoutesId");

                    b.ToTable("RoutesDetails","BdArmy");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.BdArmy.RoutesLineStringJsons", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<double>("EndLatitude")
                        .HasColumnName("EndLatitude")
                        .HasColumnType("float");

                    b.Property<double>("EndLongitude")
                        .HasColumnName("EndLongitude")
                        .HasColumnType("float");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JsonFileName")
                        .IsRequired()
                        .HasColumnName("JsonFileName")
                        .HasColumnType("nvarchar(250)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("RoutesDetailsId")
                        .HasColumnName("RoutesDetailsId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoutesId")
                        .HasColumnName("RoutesId")
                        .HasColumnType("bigint");

                    b.Property<double>("StartLatitude")
                        .HasColumnName("StartLatitude")
                        .HasColumnType("float");

                    b.Property<double>("StartLongitude")
                        .HasColumnName("StartLongitude")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("UserId")
                        .HasColumnName("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoutesDetailsId");

                    b.HasIndex("RoutesId");

                    b.ToTable("RoutesLineStringJsons","BdArmy");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.Addl_prof_q_info", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("EmployeeInformationId")
                        .HasColumnName("EmployeeInformationId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeInformationId");

                    b.ToTable("Addl_prof_q_info","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.AwardInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AwardDate")
                        .HasColumnName("AwardDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AwardGround")
                        .HasColumnName("AwardGround")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("AwardName")
                        .HasColumnName("AwardName")
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("EmployeeInformationId")
                        .HasColumnName("EmployeeInformationId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeInformationId");

                    b.ToTable("AwardInformation","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.ChildrenInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnName("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("EmployeeInformationId")
                        .HasColumnName("EmployeeInformationId")
                        .HasColumnType("bigint");

                    b.Property<long>("GenderId")
                        .HasColumnName("GenderId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("NameInBangla")
                        .IsRequired()
                        .HasColumnName("NameInBangla")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameInEnglish")
                        .IsRequired()
                        .HasColumnName("NameInEnglish")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SlNo")
                        .HasColumnName("SlNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeInformationId");

                    b.ToTable("ChildrenInformation","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.DisciplinaryActionsAndCriminalProsecution", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CategoryId")
                        .HasColumnName("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Document")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<long>("EmployeeInformationId")
                        .HasColumnName("EmployeeInformationId")
                        .HasColumnType("bigint");

                    b.Property<string>("FinalJudgement")
                        .HasColumnName("FinalJudgement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Judgement")
                        .HasColumnName("Judgement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("PresentStatusId")
                        .HasColumnName("PresentStatusId")
                        .HasColumnType("bigint");

                    b.Property<string>("Remark")
                        .HasColumnName("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("EmployeeInformationId");

                    b.HasIndex("PresentStatusId");

                    b.ToTable("DisciplinaryActionsAndCriminalProsecution","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.DisciplinaryHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DisciplinaryAndCriminalId")
                        .HasColumnName("DisciplinaryAndCriminalId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("PresentStatusId")
                        .HasColumnName("PresentStatusId")
                        .HasColumnType("bigint");

                    b.Property<string>("SubmissonDate")
                        .IsRequired()
                        .HasColumnName("SubmissonDate")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("DisciplinaryAndCriminalId");

                    b.HasIndex("PresentStatusId");

                    b.ToTable("DisciplinaryHistory","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.Document", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("DisciplinaryHistoryId")
                        .HasColumnName("DisciplinaryHistoryId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("DisciplinaryHistoryId");

                    b.ToTable("Document","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EducationalQualification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("DegreeId")
                        .HasColumnName("DegreeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Distinction")
                        .HasColumnName("Distinction")
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("EmployeeInformationId")
                        .HasColumnName("EmployeeInformationId")
                        .HasColumnType("bigint");

                    b.Property<string>("GPAOrCGPA")
                        .HasColumnName("GPAOrCGPA")
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("NameOfTheInstitute")
                        .IsRequired()
                        .HasColumnName("NameOfTheInstitute")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PassingYear")
                        .IsRequired()
                        .HasColumnName("PassingYear")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PrincipalSubject")
                        .HasColumnName("PrincipalSubject")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ResultOrDivision")
                        .HasColumnName("ResultOrDivision")
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("UniversityInformationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("DegreeId");

                    b.HasIndex("EmployeeInformationId");

                    b.ToTable("EducationalQualification","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BCSNo")
                        .HasColumnName("BCSNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BloodGroup")
                        .IsRequired()
                        .HasColumnName("BloodGroup")
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("ChildGrandChildOfFreedomFighter")
                        .HasColumnName("ChildGrandChildOfFreedomFighter")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CircularDate")
                        .HasColumnName("CircularDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnName("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("DistrictId")
                        .HasColumnName("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<long>("DivisionId")
                        .HasColumnName("DivisionId")
                        .HasColumnType("bigint");

                    b.Property<string>("DrivingLicenceNo")
                        .HasColumnName("DrivingLicenceNo")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasColumnName("Email")
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("EmployeeCode")
                        .HasColumnName("EmployeeCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("EmployeeStatusId")
                        .IsRequired()
                        .HasColumnName("EmployeeStatusId")
                        .HasColumnType("bigint");

                    b.Property<string>("FathersNameBangla")
                        .HasColumnName("FathersNameBangla")
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("FathersNameEnglish")
                        .HasColumnName("FathersNameEnglish")
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("FreedomFighter")
                        .HasColumnName("FreedomFighter")
                        .HasColumnType("bit");

                    b.Property<long>("GenderId")
                        .HasColumnName("GenderId")
                        .HasColumnType("bigint");

                    b.Property<string>("GovtID")
                        .HasColumnName("GovtID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("MaritalStatusId")
                        .HasColumnName("MaritalStatusId")
                        .HasColumnType("bigint");

                    b.Property<string>("MeritOrder")
                        .HasColumnName("MeritOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnName("MobileNumber")
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("MothersNameBangla")
                        .HasColumnName("MothersNameBangla")
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("MothersNameEnglish")
                        .HasColumnName("MothersNameEnglish")
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("NameBangla")
                        .HasColumnName("NameBangla")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NameEnglish")
                        .HasColumnName("NameEnglish")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NationalID")
                        .HasColumnName("NationalID")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("NumberOfChildren")
                        .HasColumnName("NumberOfChildren")
                        .HasColumnType("int");

                    b.Property<string>("OfficeEmail")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OtherReligion")
                        .HasColumnName("OtherReligion")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("PassportDateOfExpire")
                        .HasColumnName("PassportDateOfExpire")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PassportIssueDate")
                        .HasColumnName("PassportIssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PassportIssuePlace")
                        .HasColumnName("PassportIssuePlace")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PassportNumber")
                        .HasColumnName("PassportNumber")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Photo")
                        .HasColumnName("Photo")
                        .HasColumnType("nvarchar(500)");

                    b.Property<long?>("PoliceStationId")
                        .HasColumnName("PoliceStationId")
                        .HasColumnType("bigint");

                    b.Property<int?>("RecruitmentType")
                        .HasColumnName("RecruitmentType")
                        .HasColumnType("int");

                    b.Property<int?>("ReligionId")
                        .HasColumnName("ReligionId")
                        .HasColumnType("int");

                    b.Property<string>("TIN")
                        .HasColumnName("TIN")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<string>("oclsd")
                        .HasColumnName("oclsd")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("EmployeeStatusId");

                    b.HasIndex("PoliceStationId");

                    b.ToTable("EmployeeInformation","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformationCount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovedTotalPost")
                        .HasColumnName("ApprovedTotalPost")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("CurrentTotalActivePost")
                        .HasColumnName("CurrentTotalActivePost")
                        .HasColumnType("int");

                    b.Property<int>("CurrentTotalInactivePost")
                        .HasColumnName("CurrentTotalInactivePost")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("DesignationClassId")
                        .HasColumnName("DesignationClassId")
                        .HasColumnType("bigint");

                    b.Property<long>("DesignationID")
                        .HasColumnName("DesignationID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("InactiveDate")
                        .HasColumnName("InactiveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InactiveReason")
                        .HasColumnName("InactiveReason")
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("RankId")
                        .HasColumnName("RankId")
                        .HasColumnType("bigint");

                    b.Property<string>("Remarks")
                        .HasColumnName("Remarks")
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("DesignationClassId");

                    b.HasIndex("DesignationID");

                    b.HasIndex("RankId");

                    b.ToTable("EmployeeInformationCount","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeTransfer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachSection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("CrntDesgId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CurrDesignationClassId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("DepPostingId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeppostingTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DesignationClassId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DesignationId")
                        .HasColumnType("bigint");

                    b.Property<long>("EmployeeInformationId")
                        .HasColumnName("EmployeeInformationId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IfEmployeeContinuing")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPostingCompleted")
                        .HasColumnName("IsPostingCompleted")
                        .HasColumnType("bit");

                    b.Property<long?>("MainPostingTypeId")
                        .IsRequired()
                        .HasColumnName("PostingTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("MemoNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("PeriodFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PeriodTo")
                        .HasColumnType("datetime2");

                    b.Property<long?>("PostResponsibilityId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("PostingDate")
                        .HasColumnName("PostingDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("PostingId")
                        .IsRequired()
                        .HasColumnName("PostingId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RankId")
                        .HasColumnType("bigint");

                    b.Property<string>("Section")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("TransferFromDistrictId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TransferFromDivisionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TransferToDistrictId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TransferToDivisionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<string>("UploadFiles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkingAsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CrntDesgId");

                    b.HasIndex("CurrDesignationClassId");

                    b.HasIndex("DepPostingId");

                    b.HasIndex("DeppostingTypeId");

                    b.HasIndex("DesignationClassId");

                    b.HasIndex("DesignationId");

                    b.HasIndex("EmployeeInformationId");

                    b.HasIndex("MainPostingTypeId");

                    b.HasIndex("PostResponsibilityId");

                    b.HasIndex("PostingId");

                    b.HasIndex("RankId");

                    b.HasIndex("TransferFromDistrictId");

                    b.HasIndex("TransferFromDivisionId");

                    b.HasIndex("TransferToDistrictId");

                    b.HasIndex("TransferToDivisionId");

                    b.ToTable("EmployeeTransfer","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.ForeignTravelInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Country")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("EmployeeInformationId")
                        .HasColumnName("EmployeeInformationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnName("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Purpose")
                        .HasColumnName("Purpose")
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnName("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeInformationId");

                    b.ToTable("ForeignTravelInfo","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.LeaveApplication", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApplicationDate")
                        .HasColumnName("ApplicationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnName("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CancelledDate")
                        .HasColumnName("CancelledDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comments")
                        .HasColumnName("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("EmergencyAddress")
                        .HasColumnName("EmergencyAddress")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmergencyContact")
                        .HasColumnName("EmergencyContact")
                        .HasColumnType("nvarchar(20)");

                    b.Property<long>("EmployeeInformationId")
                        .HasColumnName("EmployeeInformationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnName("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHeadOfOffice")
                        .HasColumnName("IsHeadOfOffice")
                        .HasColumnType("bit");

                    b.Property<string>("LeaveAuthority")
                        .HasColumnName("LeaveAuthority")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("LeaveDays")
                        .HasColumnName("LeaveDays")
                        .HasColumnType("int");

                    b.Property<string>("LeaveReason")
                        .HasColumnName("LeaveReason")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("LeaveStatus")
                        .HasColumnName("LeaveStatus")
                        .HasColumnType("int");

                    b.Property<string>("LeaveSubject")
                        .HasColumnName("LeaveSubject")
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("LeaveTypeInformationId")
                        .HasColumnName("LeaveTypeInformationId")
                        .HasColumnType("bigint");

                    b.Property<string>("MemoNO")
                        .HasColumnName("MemoNO")
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnName("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeInformationId");

                    b.HasIndex("LeaveTypeInformationId");

                    b.ToTable("LeaveApplication","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.MagisterialPowerInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateOfNotification")
                        .HasColumnName("DateOfNotification")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("EmployeeInformationId")
                        .HasColumnName("EmployeeInformationId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Power")
                        .HasColumnName("Power")
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeInformationId");

                    b.ToTable("MagisterialPowerInfo","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.OfficialInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Batch")
                        .HasColumnName("Batch")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CadreDate")
                        .HasColumnName("CadreDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CadreId")
                        .HasColumnName("CadreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("CrntDesgId")
                        .HasColumnName("CrntDesgId")
                        .HasColumnType("bigint");

                    b.Property<int?>("CrntOrganogramOfficeType")
                        .HasColumnName("CrntOrganogramOfficeType")
                        .HasColumnType("int");

                    b.Property<long?>("CurrDesignationClassId")
                        .HasColumnName("CurrDesignationClassId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("DepPostingId")
                        .HasColumnName("DepPostingId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeppostingTypeId")
                        .HasColumnName("DeppostingTypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("EmployeeInformationId")
                        .HasColumnName("EmployeeInformationId")
                        .HasColumnType("bigint");

                    b.Property<long>("EmployeeTypeId")
                        .HasColumnName("EmployeeTypeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FirstJoiningDate")
                        .HasColumnName("FirstJoiningDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GradationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("GradationTypeId")
                        .HasColumnName("GradationTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("GradationYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCrntPostPermanent")
                        .HasColumnName("IsCrntPostPermanent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFirstJoiningPostPermanent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPresentPostingPermanent")
                        .HasColumnType("bit");

                    b.Property<long?>("JobCategoryId")
                        .HasColumnName("JobCategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("JobPermanentDate")
                        .HasColumnType("datetime2");

                    b.Property<byte?>("JoinOrganogramOfficeType")
                        .HasColumnType("tinyint");

                    b.Property<long?>("JoinPostingId")
                        .HasColumnName("JoinPostingId")
                        .HasColumnType("bigint");

                    b.Property<long?>("JoinPostingTypeId")
                        .HasColumnName("JoinPostingTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("JoiningDesgId")
                        .HasColumnName("JoiningDesgId")
                        .HasColumnType("bigint");

                    b.Property<long?>("JoiningDesignationClassId")
                        .HasColumnName("JoiningDesignationClassId")
                        .HasColumnType("bigint");

                    b.Property<long?>("JoiningRankId")
                        .HasColumnName("JoiningRankId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnName("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnName("OrderNumber")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PRLDate")
                        .HasColumnName("PRLDate")
                        .HasColumnType("nvarchar(20)");

                    b.Property<long?>("PostResponsibilityId")
                        .HasColumnName("PostResponsibilityId")
                        .HasColumnType("bigint");

                    b.Property<long>("PostingId")
                        .HasColumnName("PostingId")
                        .HasColumnType("bigint");

                    b.Property<long>("PostingTypeId")
                        .HasColumnName("PostingTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PresentDesignationClassId")
                        .HasColumnName("PresentDesignationClassId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PresentDesignationId")
                        .HasColumnName("PresentDesignationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("PresentJoinDate")
                        .HasColumnName("PresentJoinDate")
                        .HasColumnType("datetime2");

                    b.Property<byte?>("PresentOrganogramOfficeType")
                        .HasColumnType("tinyint");

                    b.Property<long?>("PresentRankId")
                        .HasColumnName("PresentRankId")
                        .HasColumnType("bigint");

                    b.Property<long>("PromtionNatureId")
                        .HasColumnName("PromtionNatureId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RecruitPromoId")
                        .HasColumnName("RecruitPromoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Remarks")
                        .HasColumnName("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .HasColumnName("Section")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SectionAt")
                        .HasColumnName("SectionAt")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("CrntDesgId");

                    b.HasIndex("CurrDesignationClassId");

                    b.HasIndex("DepPostingId");

                    b.HasIndex("DeppostingTypeId");

                    b.HasIndex("EmployeeInformationId");

                    b.HasIndex("EmployeeTypeId");

                    b.HasIndex("GradationTypeId");

                    b.HasIndex("JobCategoryId");

                    b.HasIndex("JoinPostingId");

                    b.HasIndex("JoinPostingTypeId");

                    b.HasIndex("JoiningDesgId");

                    b.HasIndex("JoiningDesignationClassId");

                    b.HasIndex("JoiningRankId");

                    b.HasIndex("PostResponsibilityId");

                    b.HasIndex("PostingId");

                    b.HasIndex("PostingTypeId");

                    b.HasIndex("PresentDesignationClassId");

                    b.HasIndex("PresentDesignationId");

                    b.HasIndex("PresentRankId");

                    b.HasIndex("PromtionNatureId");

                    b.HasIndex("RecruitPromoId");

                    b.ToTable("OfficialInformation","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.Organogram", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("DesignationID")
                        .HasColumnName("DesignationID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsParent")
                        .HasColumnName("IsParent")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPermanent")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsPermanent")
                        .HasColumnType("bit")
                        .HasDefaultValue(null);

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("NonPermanentDeadLine")
                        .HasColumnType("datetime2");

                    b.Property<string>("OfficeEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficePhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("OrganogramOfficeType")
                        .HasColumnType("tinyint");

                    b.Property<long>("ParentId")
                        .HasColumnName("ParentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ParentPostingId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PostingId")
                        .HasColumnName("PostingId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PostingTypeId")
                        .HasColumnName("PostingTypeId")
                        .HasColumnType("bigint");

                    b.Property<int>("TotalPost")
                        .HasColumnName("TotalPost")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("DesignationID");

                    b.HasIndex("ParentPostingId");

                    b.HasIndex("PostingId");

                    b.HasIndex("PostingTypeId");

                    b.ToTable("Organogram","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.OtherServiceInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("EmpAddress")
                        .HasColumnName("EmpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EmployeeInformationId")
                        .HasColumnName("EmployeeInformationId")
                        .HasColumnType("bigint");

                    b.Property<string>("EmployerName")
                        .HasColumnName("EmployerName")
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnName("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("OtherServiceType")
                        .HasColumnName("OtherServiceType")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Position")
                        .HasColumnName("Position")
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnName("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeInformationId");

                    b.ToTable("OtherServiceInfo","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.PRL", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("EmployeeInformationId")
                        .HasColumnName("EmployeeInformationdId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmail")
                        .HasColumnName("IsEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSMS")
                        .HasColumnName("IsSMS")
                        .HasColumnType("bit");

                    b.Property<string>("MessageBody")
                        .IsRequired()
                        .HasColumnName("MessageBody")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("MessageSubject")
                        .IsRequired()
                        .HasColumnName("MessageSubject")
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("NoticeBy")
                        .HasColumnName("NoticeBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("NoticeDate")
                        .HasColumnName("NoticeDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeInformationId");

                    b.ToTable("PRL","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.PermanentAddress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("DistrictId")
                        .HasColumnName("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<long>("DivisionId")
                        .HasColumnName("DivisionId")
                        .HasColumnType("bigint");

                    b.Property<long>("EmployeeInformationId")
                        .HasColumnName("EmployeeInformationId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("OtherThana")
                        .HasColumnName("OtherThana")
                        .HasColumnType("nvarchar(400)");

                    b.Property<long>("PoliceStationId")
                        .HasColumnName("PoliceStationId")
                        .HasColumnType("bigint");

                    b.Property<string>("PostOfficeInBangla")
                        .IsRequired()
                        .HasColumnName("PostOfficeInBangla")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PostOfficeInEnglish")
                        .IsRequired()
                        .HasColumnName("PostOfficeInEnglish")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TelephoneNo")
                        .HasColumnName("TelephoneNo")
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<string>("VillageHouseNoAndRoadInBangla")
                        .IsRequired()
                        .HasColumnName("VillageHouseNoAndRoadInBangla")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("VillageHouseNoAndRoadInEnglish")
                        .IsRequired()
                        .HasColumnName("VillageHouseNoAndRoadInEnglish")
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("EmployeeInformationId");

                    b.HasIndex("PoliceStationId");

                    b.ToTable("PermanentAddress","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.PostingAbroad", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Country")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("EmployeeInformationId")
                        .HasColumnName("EmployeeInformationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnName("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Organization")
                        .HasColumnName("Organization")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Post")
                        .HasColumnName("Post")
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnName("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeInformationId");

                    b.ToTable("PostingAbroad","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.PostingRecords", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachSection")
                        .HasColumnName("AttachSection")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("CrntDesgId")
                        .HasColumnName("CrntDesgId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CurrDesignationClassId")
                        .HasColumnName("CurrDesignationClassId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("DepPostingId")
                        .HasColumnName("DepPostingId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DeppostingTypeId")
                        .HasColumnName("DeppostingTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DesignationClassId")
                        .HasColumnName("DesignationClassId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DesignationId")
                        .HasColumnName("DesignationId")
                        .HasColumnType("bigint");

                    b.Property<long>("EmployeeInformationId")
                        .HasColumnName("EmployeeInformationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("EmployeeTransferId")
                        .HasColumnName("EmployeeTransferId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IfEmployeeContinuing")
                        .HasColumnName("IfEmployeeContinuing")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("MainPostingTypeId")
                        .HasColumnName("MainPostingTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("MemoNo")
                        .HasColumnName("MemoNo")
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("PeriodFrom")
                        .HasColumnName("PeriodFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PeriodTo")
                        .HasColumnName("PeriodTo")
                        .HasColumnType("datetime2");

                    b.Property<long?>("PostResponsibilityId")
                        .HasColumnName("PostResponsibilityId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("PostingDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("PostingId")
                        .HasColumnName("PostingId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RankId")
                        .HasColumnName("RankId")
                        .HasColumnType("bigint");

                    b.Property<string>("Section")
                        .HasColumnName("Section")
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("TransferFromDistrictId")
                        .HasColumnName("TransferFromDistrictId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TransferFromDivisionId")
                        .HasColumnName("TransferFromDivisionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TransferToDistrictId")
                        .HasColumnName("TransferToDistrictId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TransferToDivisionId")
                        .HasColumnName("TransferToDivisionId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<string>("UploadFiles")
                        .HasColumnName("UploadFiles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("WorkingAsId")
                        .HasColumnName("WorkingAsId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CrntDesgId");

                    b.HasIndex("CurrDesignationClassId");

                    b.HasIndex("DepPostingId");

                    b.HasIndex("DeppostingTypeId");

                    b.HasIndex("DesignationClassId");

                    b.HasIndex("DesignationId");

                    b.HasIndex("EmployeeInformationId");

                    b.HasIndex("EmployeeTransferId")
                        .IsUnique()
                        .HasFilter("[EmployeeTransferId] IS NOT NULL");

                    b.HasIndex("MainPostingTypeId");

                    b.HasIndex("PostResponsibilityId");

                    b.HasIndex("PostingId");

                    b.HasIndex("RankId");

                    b.HasIndex("TransferFromDistrictId");

                    b.HasIndex("TransferFromDivisionId");

                    b.HasIndex("TransferToDistrictId");

                    b.HasIndex("TransferToDivisionId");

                    b.ToTable("PostingRecords","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.PresentAddress", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("DistrictId")
                        .HasColumnName("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<long>("DivisionId")
                        .HasColumnName("DivisionId")
                        .HasColumnType("bigint");

                    b.Property<long>("EmployeeInformationId")
                        .HasColumnName("EmployeeInformationId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("OtherThana")
                        .HasColumnName("OtherThana")
                        .HasColumnType("nvarchar(400)");

                    b.Property<long>("PoliceStationId")
                        .HasColumnName("PoliceStationId")
                        .HasColumnType("bigint");

                    b.Property<string>("PostOfficeInBangla")
                        .IsRequired()
                        .HasColumnName("PostOfficeInBangla")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PostOfficeInEnglish")
                        .IsRequired()
                        .HasColumnName("PostOfficeInEnglish")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TelephoneNo")
                        .HasColumnName("TelephoneNo")
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<string>("VillageHouseNoAndRoadInBangla")
                        .IsRequired()
                        .HasColumnName("VillageHouseNoAndRoadInBangla")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("VillageHouseNoAndRoadInEnglish")
                        .IsRequired()
                        .HasColumnName("VillageHouseNoAndRoadInEnglish")
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("EmployeeInformationId");

                    b.HasIndex("PoliceStationId");

                    b.ToTable("PresentAddress","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.PromotionManagement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("DesignationId")
                        .HasColumnName("DesignationId")
                        .HasColumnType("bigint");

                    b.Property<long>("EmployeeInformationId")
                        .HasColumnName("EmployeeInformationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("GODate")
                        .HasColumnName("GODate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GONumber")
                        .HasColumnName("GONumber")
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("PayScale")
                        .HasColumnName("PayScale")
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("PayScaleYearInfoId")
                        .HasColumnName("PayScaleYearInfoId")
                        .HasColumnType("bigint");

                    b.Property<bool>("PresentPosting")
                        .HasColumnName("PresentPosting")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PromotionDate")
                        .HasColumnName("PromotionDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("PromtionNatureId")
                        .HasColumnName("PromtionNatureId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RankId")
                        .HasColumnName("RankId")
                        .HasColumnType("bigint");

                    b.Property<bool>("RunningStatus")
                        .HasColumnName("RunningStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("DesignationId");

                    b.HasIndex("EmployeeInformationId");

                    b.HasIndex("PayScaleYearInfoId");

                    b.HasIndex("PromtionNatureId");

                    b.HasIndex("RankId");

                    b.ToTable("PromotionManagement","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.PromotionPartculars", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("DesignationId")
                        .HasColumnName("DesignationId")
                        .HasColumnType("bigint");

                    b.Property<long>("EmployeeInformationId")
                        .HasColumnName("EmployeeInformationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("GODate")
                        .HasColumnName("GODate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GONumber")
                        .HasColumnName("GONumber")
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("PayScale")
                        .HasColumnName("PayScale")
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("PayScaleYearInfoId")
                        .HasColumnName("PayScaleYearInfoId")
                        .HasColumnType("bigint");

                    b.Property<bool>("PresentPosting")
                        .HasColumnName("PresentPosting")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PromotionDate")
                        .HasColumnName("PromotionDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("PromotionManagementId")
                        .HasColumnType("bigint");

                    b.Property<bool>("PromotionStatus")
                        .HasColumnName("PromotionStatus")
                        .HasColumnType("bit");

                    b.Property<long?>("PromtionNatureId")
                        .HasColumnName("PromtionNatureId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RankId")
                        .HasColumnName("RankId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("DesignationId");

                    b.HasIndex("EmployeeInformationId");

                    b.HasIndex("PayScaleYearInfoId");

                    b.HasIndex("PromotionManagementId")
                        .IsUnique()
                        .HasFilter("[PromotionManagementId] IS NOT NULL");

                    b.HasIndex("PromtionNatureId");

                    b.HasIndex("RankId");

                    b.ToTable("PromotionPartculars","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.PublicationInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("EmployeeInformationId")
                        .HasColumnName("EmployeeInformationId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnName("PublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PublicationName")
                        .HasColumnName("PublicationName")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PublicationType")
                        .HasColumnName("PublicationType")
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeInformationId");

                    b.ToTable("PublicationInfo","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.ServiceHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CadreId")
                        .HasColumnName("CadreId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateOfGazetted")
                        .HasColumnName("DateOfGazetted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfGovtService")
                        .IsRequired()
                        .HasColumnName("DateOfGovtService")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("EmployeeInformationId")
                        .HasColumnName("EmployeeInformationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EncadrementDate")
                        .HasColumnName("EncadrementDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EncadrementNumber")
                        .HasColumnName("EncadrementNumber")
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("NationalSeniority")
                        .HasColumnName("NationalSeniority")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeInformationId");

                    b.ToTable("ServiceHistory","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.SpouseInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Designation")
                        .HasColumnName("Designation")
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("DistrictId")
                        .HasColumnName("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<long>("DivisionId")
                        .HasColumnName("DivisionId")
                        .HasColumnType("bigint");

                    b.Property<long>("EmployeeInformationId")
                        .HasColumnName("EmployeeInformationId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnName("Location")
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("NameInBangla")
                        .IsRequired()
                        .HasColumnName("NameInBangla")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameInEnglish")
                        .IsRequired()
                        .HasColumnName("NameInEnglish")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasColumnName("Occupation")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("EmployeeInformationId");

                    b.ToTable("SpouseInformation","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.TrainingInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("CourseTitle")
                        .IsRequired()
                        .HasColumnName("CourseTitle")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("EmployeeInformationId")
                        .HasColumnName("EmployeeInformationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnName("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Grade")
                        .HasColumnName("Grade")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Institute")
                        .IsRequired()
                        .HasColumnName("Institute")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnName("Location")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Position")
                        .HasColumnName("Position")
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnName("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrainingTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeInformationId");

                    b.ToTable("TrainingInformation","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.TrainingInformationManagement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("ApprovalStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)2);

                    b.Property<string>("CertificateDocumentURI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("DesignationId")
                        .HasColumnName("DesignationId")
                        .HasColumnType("bigint");

                    b.Property<long>("EmployeeInformationId")
                        .HasColumnName("EmployeeInformationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Grade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RankId")
                        .HasColumnName("RankId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<long>("TrainingInformationManagementMasterId")
                        .HasColumnName("TrainingInformationManagementMasterId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeInformationId");

                    b.HasIndex("TrainingInformationManagementMasterId");

                    b.ToTable("TrainingInformationManagement","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.TrainingInformationManagementMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("Status")
                        .HasColumnName("Status")
                        .HasColumnType("bit");

                    b.Property<long>("TrainingManagementTypeId")
                        .HasColumnName("TrainingManagementTypeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("TrainingManagementTypeId");

                    b.ToTable("TrainingInformationManagementMaster","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.UniversityInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acronym")
                        .HasColumnName("Acronym")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("EstablishedYear")
                        .HasColumnName("EstablishedYear")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnName("Location")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("UniversityName")
                        .HasColumnName("UniversityName")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("UniversityNameBn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("UniversityInformation","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.Cadre", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CadreNameBangla")
                        .IsRequired()
                        .HasColumnName("CadreNameBangla")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CadreNameEnglish")
                        .IsRequired()
                        .HasColumnName("CadreNameEnglish")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ClassType")
                        .HasColumnName("ClassType")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("Cadre","GS");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.CalculationMethod", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CalculationMethodName")
                        .IsRequired()
                        .HasColumnName("CalculationMethodName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("CalculationMethod","GS");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnName("CategoryName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("Category","GS");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.Color", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasColumnName("ColorName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("Color","GS");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.CountryTrainingManagementTypeMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Country")
                        .HasColumnType("int");

                    b.Property<long>("TrainingManagementTypeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TrainingManagementTypeId");

                    b.ToTable("CountryTrainingManagementTypeMap");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.Degree", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("DegreeName")
                        .IsRequired()
                        .HasColumnName("DegreeName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("Degree","GS");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.Designation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("DesignationClassId")
                        .HasColumnName("DesignationClassId")
                        .HasColumnType("bigint");

                    b.Property<string>("DesignationName")
                        .IsRequired()
                        .HasColumnName("DesignationName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DesignationNameBangla")
                        .HasColumnName("DesignationNameBangla")
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("RankId")
                        .HasColumnName("RankId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("DesignationClassId");

                    b.HasIndex("RankId");

                    b.ToTable("Designation","GS");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.DesignationClass", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("DesignationClassName")
                        .IsRequired()
                        .HasColumnName("DesignationClassName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("DesignationClass","GS");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.District", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasColumnName("DistrictName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DistrictNameBangla")
                        .HasColumnName("DistrictNameBangla")
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("DivisionId")
                        .HasColumnName("DivisionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.ToTable("District","GS");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.Division", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("DivisionName")
                        .IsRequired()
                        .HasColumnName("DivisionName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DivisionNameBangla")
                        .HasColumnName("DivisionNameBangla")
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("Division","GS");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.EmployeeStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("EmployeeStatusName")
                        .IsRequired()
                        .HasColumnName("EmployeeStatusName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeeStatusNameBangla")
                        .HasColumnName("EmployeeStatusNameBangla")
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("EmployeeStatus","GS");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.EmployeeType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("EmployeeTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("EmployeeType");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.Event", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnName("EventName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("Event","GS");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.GradationType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("GradationTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("GradationType");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.Institute", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("InstituteName")
                        .IsRequired()
                        .HasColumnName("InstituteName")
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("Institute","GS");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.JobCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JobCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("JobCategory");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.Language", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasColumnName("LanguageName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("Language","GS");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.LeaveTypeInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationWithIn")
                        .HasColumnName("ApplicationWithIn")
                        .HasColumnType("int");

                    b.Property<long>("CalculationMethodId")
                        .HasColumnName("CalculationMethodId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("EligibleFor")
                        .HasColumnName("EligibleFor")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LeaveLimit")
                        .HasColumnName("LeaveLimit")
                        .HasColumnType("int");

                    b.Property<int>("LeaveRestriction")
                        .HasColumnName("LeaveRestriction")
                        .HasColumnType("int");

                    b.Property<int>("MaxDaysPerYear")
                        .HasColumnName("MaxDaysPerYear")
                        .HasColumnType("int");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("NameInBangla")
                        .IsRequired()
                        .HasColumnName("NameInBangla")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameInEnglish")
                        .IsRequired()
                        .HasColumnName("NameInEnglish")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("CalculationMethodId");

                    b.ToTable("LeaveTypeInformation","GS");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.PayScalePerGrade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("RankId")
                        .HasColumnName("RankId")
                        .HasColumnType("bigint");

                    b.Property<string>("ScaleOfPay")
                        .HasColumnName("ScaleOfPay")
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("ScaleYear")
                        .HasColumnName("ScaleYear")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<decimal>("basic_pay")
                        .HasColumnName("basic_pay")
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    b.HasIndex("RankId");

                    b.ToTable("PayScalePerGrade","GS");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.PayScaleYearInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ImplementationDate")
                        .HasColumnName("ImplementationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("PayScaleYearInfoName")
                        .IsRequired()
                        .HasColumnName("PayScaleYearInfoName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("PayScaleYearInfo","GS");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.PoliceStation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("DistrictId")
                        .HasColumnName("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("PoliceStationName")
                        .IsRequired()
                        .HasColumnName("PoliceStationName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PoliceStationNameBangla")
                        .HasColumnName("PoliceStationNameBangla")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("PoliceStation","GS");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.PostResponsibility", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("PostResponsibilityName")
                        .IsRequired()
                        .HasColumnName("PostResponsibilityName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("PostResponsibility","GS");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.Posting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("DistrictId")
                        .HasColumnName("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DivisionId")
                        .HasColumnName("DivisionId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("PostingName")
                        .IsRequired()
                        .HasColumnName("PostingName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PostingNameBangla")
                        .HasColumnName("PostingNameBangla")
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("PostingTypeId")
                        .HasColumnName("PostingTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ThanaId")
                        .HasColumnName("ThanaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("PostingTypeId");

                    b.ToTable("Posting","GS");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.PostingType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("PostingTypeName")
                        .IsRequired()
                        .HasColumnName("PostingTypeName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PostingTypeNameBangla")
                        .HasColumnName("PostingTypeNameBangla")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("PostingType","GS");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.PresentStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("PresentStatusName")
                        .IsRequired()
                        .HasColumnName("PresentStatusName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("PresentStatus","GS");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.PromtionNature", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("PromtionNatureName")
                        .IsRequired()
                        .HasColumnName("PromtionNatureName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PromtionNatureNameBangla")
                        .HasColumnName("PromtionNatureNameBangla")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("PromtionNature","GS");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.Rank", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("RankName")
                        .IsRequired()
                        .HasColumnName("RankName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RankNameBangla")
                        .HasColumnName("RankNameBangla")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("Rank","GS");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.RecruitPromo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("RecruitPromoBangla")
                        .HasColumnName("RecruitPromoBangla")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RecruitPromoEnglish")
                        .IsRequired()
                        .HasColumnName("RecruitPromoEnglish")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("RecruitPromo","GS");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.SpecialHolydaySetup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnName("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("SpecialHolydaySetupName")
                        .IsRequired()
                        .HasColumnName("SpecialHolydaySetupName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnName("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("SpecialHolydaySetup","GS");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.TrainingManagementType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DivisionId")
                        .HasColumnType("bigint");

                    b.Property<int>("DurationHour")
                        .HasColumnName("DurationHour")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnName("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Institute")
                        .HasColumnName("Institute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SuggestedBy")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnName("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrainingBatch")
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte?>("TrainingLocationType")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("TrainingManagementTypeForeignType")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("TrainingManagementTypeLocalType")
                        .HasColumnType("tinyint");

                    b.Property<string>("TrainingObjective")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainingSubject")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TrainingTitle")
                        .HasColumnType("nvarchar(500)");

                    b.Property<long?>("UpazillaId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<string>("Vanue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("UpazillaId");

                    b.ToTable("TrainingManagementType","GS");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.Upazilla", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameBn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Upazilla");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.WeeklyHolydaySetup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("Day")
                        .HasColumnName("Day")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("HolidayDate")
                        .HasColumnName("HolidayDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("YearsId")
                        .HasColumnName("YearsId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("YearsId");

                    b.ToTable("WeeklyHolydaySetup","GS");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.Years", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<int>("YearsName")
                        .HasColumnName("YearsName")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Years","GS");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.Module", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte>("IsVisible")
                        .HasColumnType("tinyint");

                    b.Property<int?>("MenueOrder")
                        .IsRequired()
                        .HasColumnName("MenueOrder")
                        .HasColumnType("int");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("ModuleIcon")
                        .IsRequired()
                        .HasColumnName("ModuleIcon")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasColumnName("ModuleName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("Module","System");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.PmsGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("GroupDescription")
                        .IsRequired()
                        .HasColumnName("GroupDescription")
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnName("GroupName")
                        .HasColumnType("nvarchar(40)");

                    b.Property<byte>("GroupStatus")
                        .HasColumnName("GroupStatus")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte>("IsVisible")
                        .HasColumnName("IsVisible")
                        .HasColumnType("tinyint");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("PmsGroup","System");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("EmployeeInformationId")
                        .HasColumnName("EmployeeInformationId")
                        .HasColumnType("bigint");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("GroupID")
                        .HasColumnName("GroupID")
                        .HasColumnType("bigint");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("PmsGroupID")
                        .HasColumnType("bigint");

                    b.Property<string>("RoleName")
                        .HasColumnName("RoleName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnName("UserEmail")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserGroup")
                        .HasColumnName("UserGroup")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("UserName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnName("UserPassword")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserPhone")
                        .HasColumnName("UserPhone")
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("UserRolesId")
                        .HasColumnType("bigint");

                    b.Property<bool>("UserStatus")
                        .HasColumnName("UserStatus")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeInformationId")
                        .IsUnique()
                        .HasFilter("[EmployeeInformationId] IS NOT NULL");

                    b.HasIndex("GroupID");

                    b.HasIndex("PmsGroupID");

                    b.HasIndex("UserRolesId");

                    b.ToTable("User","System");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.UserGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnName("GroupName")
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<byte>("IsDefault")
                        .HasColumnName("IsDefault")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte>("IsUsed")
                        .HasColumnName("IsUsed")
                        .HasColumnType("tinyint");

                    b.Property<byte>("IsVisible")
                        .HasColumnName("IsVisible")
                        .HasColumnType("tinyint");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("ModuleActionNames")
                        .IsRequired()
                        .HasColumnName("ModuleActionNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("UserGroup","System");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.UserRoles", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnName("RoleName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.HasKey("Id");

                    b.ToTable("UserRoles","System");
                });

            modelBuilder.Entity("PTSL.DgFood.Web.Model.LanguageInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasColumnName("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("CreatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnName("DeletedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<long>("EmployeeInformationId")
                        .HasColumnName("EmployeeInformationId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("LanguageId")
                        .HasColumnName("LanguageId")
                        .HasColumnType("bigint");

                    b.Property<string>("Listening")
                        .IsRequired()
                        .HasColumnName("Listening")
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Reading")
                        .IsRequired()
                        .HasColumnName("Reading")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnName("UpdatedAt")
                        .HasColumnType("datetime2 (3)");

                    b.Property<string>("Writing")
                        .IsRequired()
                        .HasColumnName("Writing")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeInformationId");

                    b.HasIndex("LanguageId");

                    b.ToTable("LanguageInformation","Employee");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.BdArmy.RoutesDetails", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.BdArmy.Routes", "Routes")
                        .WithMany("RoutesDetails")
                        .HasForeignKey("RoutesId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.BdArmy.RoutesLineStringJsons", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.BdArmy.RoutesDetails", "RoutesDetails")
                        .WithMany("LineStringJsons")
                        .HasForeignKey("RoutesDetailsId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.BdArmy.Routes", "Routes")
                        .WithMany("LineStringJsons")
                        .HasForeignKey("RoutesId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.Addl_prof_q_info", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformation", "EmployeeInformation")
                        .WithMany("Addl_prof_q_infos")
                        .HasForeignKey("EmployeeInformationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.AwardInformation", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformation", "EmployeeInformation")
                        .WithMany("AwardInformations")
                        .HasForeignKey("EmployeeInformationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.ChildrenInformation", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformation", "EmployeeInformation")
                        .WithMany("ChildrenInformation")
                        .HasForeignKey("EmployeeInformationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.DisciplinaryActionsAndCriminalProsecution", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Category", "Category")
                        .WithMany("DisciplinaryActionsAndCriminalProsecution")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformation", "EmployeeInformation")
                        .WithMany("DisciplinaryActionsAndCriminalProsecutions")
                        .HasForeignKey("EmployeeInformationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.PresentStatus", "PresentStatus")
                        .WithMany("DisciplinaryActionsAndCriminalProsecution")
                        .HasForeignKey("PresentStatusId")
                        .OnDelete(DeleteBehavior.ClientCascade);
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.DisciplinaryHistory", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.DisciplinaryActionsAndCriminalProsecution", "DisciplinaryAndCriminal")
                        .WithMany("DisciplinaryHistories")
                        .HasForeignKey("DisciplinaryAndCriminalId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.PresentStatus", "PresentStatus")
                        .WithMany("DisciplinaryHistories")
                        .HasForeignKey("PresentStatusId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.Document", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.DisciplinaryHistory", "DisciplinaryHistory")
                        .WithMany("Documents")
                        .HasForeignKey("DisciplinaryHistoryId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EducationalQualification", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Degree", "Degree")
                        .WithMany("EducationalQualifications")
                        .HasForeignKey("DegreeId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformation", "EmployeeInformation")
                        .WithMany("EducationalQualification")
                        .HasForeignKey("EmployeeInformationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformation", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.District", "District")
                        .WithMany("EmployeeInformation")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Division", "Division")
                        .WithMany("EmployeeInformation")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.EmployeeStatus", "EmployeeStatus")
                        .WithMany("EmployeeInformations")
                        .HasForeignKey("EmployeeStatusId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.PoliceStation", "PoliceStation")
                        .WithMany("EmployeeInformation")
                        .HasForeignKey("PoliceStationId")
                        .OnDelete(DeleteBehavior.ClientCascade);
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformationCount", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.DesignationClass", "DesignationClass")
                        .WithMany("EmployeeInformationCount")
                        .HasForeignKey("DesignationClassId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Designation", "Designation")
                        .WithMany("EmployeeInformationCount")
                        .HasForeignKey("DesignationID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Rank", "Rank")
                        .WithMany("EmployeeInformationCount")
                        .HasForeignKey("RankId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeTransfer", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Designation", "CrntDesg")
                        .WithMany()
                        .HasForeignKey("CrntDesgId");

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.DesignationClass", "CurrDesignationClass")
                        .WithMany()
                        .HasForeignKey("CurrDesignationClassId");

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Posting", "DepPosting")
                        .WithMany()
                        .HasForeignKey("DepPostingId");

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.PostingType", "DeppostingType")
                        .WithMany()
                        .HasForeignKey("DeppostingTypeId");

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.DesignationClass", "DesignationClass")
                        .WithMany()
                        .HasForeignKey("DesignationClassId");

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Designation", "Designation")
                        .WithMany()
                        .HasForeignKey("DesignationId");

                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformation", "EmployeeInformation")
                        .WithMany("EmployeeTransfers")
                        .HasForeignKey("EmployeeInformationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.PostingType", "MainPostingType")
                        .WithMany("EmployeeTransfer")
                        .HasForeignKey("MainPostingTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.PostResponsibility", "PostResponsibility")
                        .WithMany()
                        .HasForeignKey("PostResponsibilityId");

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Posting", "Posting")
                        .WithMany("EmployeeTransfer")
                        .HasForeignKey("PostingId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Rank", "Rank")
                        .WithMany()
                        .HasForeignKey("RankId");

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.District", "TransferFromDistrict")
                        .WithMany()
                        .HasForeignKey("TransferFromDistrictId");

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Division", "TransferFromDivision")
                        .WithMany()
                        .HasForeignKey("TransferFromDivisionId");

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.District", "TransferToDistrict")
                        .WithMany()
                        .HasForeignKey("TransferToDistrictId");

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Division", "TransferToDivision")
                        .WithMany()
                        .HasForeignKey("TransferToDivisionId");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.ForeignTravelInfo", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformation", "EmployeeInformation")
                        .WithMany("ForeignTravelInfos")
                        .HasForeignKey("EmployeeInformationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.LeaveApplication", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformation", "EmployeeInformation")
                        .WithMany("LeaveApplications")
                        .HasForeignKey("EmployeeInformationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.LeaveTypeInformation", "LeaveTypeInformation")
                        .WithMany("LeaveApplications")
                        .HasForeignKey("LeaveTypeInformationId")
                        .OnDelete(DeleteBehavior.ClientCascade);
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.MagisterialPowerInfo", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformation", "EmployeeInformation")
                        .WithMany("MagisterialPowerInfos")
                        .HasForeignKey("EmployeeInformationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.OfficialInformation", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Designation", "CrntDesg")
                        .WithMany("CrntPostingDetails")
                        .HasForeignKey("CrntDesgId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.DesignationClass", "CurrDesignationClass")
                        .WithMany("CurrPostingDetails")
                        .HasForeignKey("CurrDesignationClassId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Posting", "Depposting")
                        .WithMany("DepPostingDetails")
                        .HasForeignKey("DepPostingId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.PostingType", "DeppostingType")
                        .WithMany("DepPostingDetails")
                        .HasForeignKey("DeppostingTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformation", "EmployeeInformation")
                        .WithMany("OfficialInformation")
                        .HasForeignKey("EmployeeInformationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.EmployeeType", "EmployeeType")
                        .WithMany("OfficialInformations")
                        .HasForeignKey("EmployeeTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.GradationType", "GradationType")
                        .WithMany("OfficialInformations")
                        .HasForeignKey("GradationTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.JobCategory", "JobCategory")
                        .WithMany("OfficialInformations")
                        .HasForeignKey("JobCategoryId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Posting", "JoinPosting")
                        .WithMany()
                        .HasForeignKey("JoinPostingId");

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.PostingType", "JoinPostingType")
                        .WithMany()
                        .HasForeignKey("JoinPostingTypeId");

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Designation", "JoiningDesg")
                        .WithMany("JoiningPostingDetails")
                        .HasForeignKey("JoiningDesgId");

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.DesignationClass", "JoiningDesignationClass")
                        .WithMany("JoiningPostingDetails")
                        .HasForeignKey("JoiningDesignationClassId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Rank", "JoiningRank")
                        .WithMany("JoiningPostingDetails")
                        .HasForeignKey("JoiningRankId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.PostResponsibility", "PostResponsibility")
                        .WithMany("PresentPostingDetails")
                        .HasForeignKey("PostResponsibilityId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Posting", "Posting")
                        .WithMany("PresentPostingDetails")
                        .HasForeignKey("PostingId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.PostingType", "PostingType")
                        .WithMany("PresentPostingDetails")
                        .HasForeignKey("PostingTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.DesignationClass", "PresentDesignationClass")
                        .WithMany("PresentPostingDetails")
                        .HasForeignKey("PresentDesignationClassId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Designation", "PresentDesignation")
                        .WithMany("PresentPostingDetails")
                        .HasForeignKey("PresentDesignationId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Rank", "PresentRank")
                        .WithMany("PresentPostingDetails")
                        .HasForeignKey("PresentRankId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.PromtionNature", "PromtionNature")
                        .WithMany("PresentPostingDetails")
                        .HasForeignKey("PromtionNatureId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.RecruitPromo", "RecruitPromo")
                        .WithMany("OfficialInformations")
                        .HasForeignKey("RecruitPromoId")
                        .OnDelete(DeleteBehavior.ClientCascade);
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.Organogram", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Designation", "Designation")
                        .WithMany("Organograms")
                        .HasForeignKey("DesignationID")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Posting", "ParentPosting")
                        .WithMany("ParentOrganograms")
                        .HasForeignKey("ParentPostingId");

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Posting", "Posting")
                        .WithMany("Organograms")
                        .HasForeignKey("PostingId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.PostingType", "PostingType")
                        .WithMany("Organograms")
                        .HasForeignKey("PostingTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade);
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.OtherServiceInfo", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformation", "EmployeeInformation")
                        .WithMany("OtherServiceInfos")
                        .HasForeignKey("EmployeeInformationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.PRL", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformation", "EmployeeInformation")
                        .WithMany("PRLData")
                        .HasForeignKey("EmployeeInformationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.PermanentAddress", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.District", "District")
                        .WithMany("PermanentAddresses")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Division", "Division")
                        .WithMany("PermanentAddresses")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformation", "EmployeeInformation")
                        .WithMany("PermanentAddresses")
                        .HasForeignKey("EmployeeInformationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.PoliceStation", "PoliceStation")
                        .WithMany("PermanentAddresses")
                        .HasForeignKey("PoliceStationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.PostingAbroad", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformation", "EmployeeInformation")
                        .WithMany("PostingAbroads")
                        .HasForeignKey("EmployeeInformationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.PostingRecords", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Designation", "CrntDesg")
                        .WithMany("CrntPostingRecords")
                        .HasForeignKey("CrntDesgId");

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.DesignationClass", "CurrDesignationClass")
                        .WithMany("CurrPostingRecords")
                        .HasForeignKey("CurrDesignationClassId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Posting", "DepPosting")
                        .WithMany("DepPostingRecords")
                        .HasForeignKey("DepPostingId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.PostingType", "DeppostingType")
                        .WithMany("DepPostingRecords")
                        .HasForeignKey("DeppostingTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.DesignationClass", "DesignationClass")
                        .WithMany("PostingRecords")
                        .HasForeignKey("DesignationClassId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Designation", "Designation")
                        .WithMany("PostingRecords")
                        .HasForeignKey("DesignationId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformation", "EmployeeInformation")
                        .WithMany("PostingRecords")
                        .HasForeignKey("EmployeeInformationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeTransfer", "EmployeeTransfer")
                        .WithOne("PostingRecords")
                        .HasForeignKey("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.PostingRecords", "EmployeeTransferId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.PostingType", "MainPostingType")
                        .WithMany("MainPostingRecords")
                        .HasForeignKey("MainPostingTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.PostResponsibility", "PostResponsibility")
                        .WithMany("PostingRecords")
                        .HasForeignKey("PostResponsibilityId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Posting", "Posting")
                        .WithMany("PostingRecords")
                        .HasForeignKey("PostingId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Rank", "Rank")
                        .WithMany("PostingRecords")
                        .HasForeignKey("RankId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.District", "TransferFromDistrict")
                        .WithMany("TransferFromPostingRecords")
                        .HasForeignKey("TransferFromDistrictId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Division", "TransferFromDivision")
                        .WithMany("TransferFromPostingRecords")
                        .HasForeignKey("TransferFromDivisionId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.District", "TransferToDistrict")
                        .WithMany("TransferToPostingRecords")
                        .HasForeignKey("TransferToDistrictId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Division", "TransferToDivision")
                        .WithMany("TransferToPostingRecords")
                        .HasForeignKey("TransferToDivisionId")
                        .OnDelete(DeleteBehavior.ClientCascade);
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.PresentAddress", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.District", "District")
                        .WithMany("PresentAddresses")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Division", "Division")
                        .WithMany("PresentAddresses")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformation", "EmployeeInformation")
                        .WithMany("PresentAddresses")
                        .HasForeignKey("EmployeeInformationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.PoliceStation", "PoliceStation")
                        .WithMany("PresentAddresses")
                        .HasForeignKey("PoliceStationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.PromotionManagement", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Designation", "Designation")
                        .WithMany("PromotionManagement")
                        .HasForeignKey("DesignationId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformation", "EmployeeInformation")
                        .WithMany("PromotionManagement")
                        .HasForeignKey("EmployeeInformationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.PayScaleYearInfo", "PayScaleYearInfo")
                        .WithMany()
                        .HasForeignKey("PayScaleYearInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.PromtionNature", "PromtionNature")
                        .WithMany("PromotionManagement")
                        .HasForeignKey("PromtionNatureId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Rank", "Rank")
                        .WithMany("PromotionManagement")
                        .HasForeignKey("RankId")
                        .OnDelete(DeleteBehavior.ClientCascade);
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.PromotionPartculars", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Designation", "Designation")
                        .WithMany("PromotionPartculars")
                        .HasForeignKey("DesignationId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformation", "EmployeeInformation")
                        .WithMany("PromotionPartculars")
                        .HasForeignKey("EmployeeInformationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.PayScaleYearInfo", "PayScaleYearInfo")
                        .WithMany()
                        .HasForeignKey("PayScaleYearInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.PromotionManagement", "PromotionManagement")
                        .WithOne("PromotionPartculars")
                        .HasForeignKey("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.PromotionPartculars", "PromotionManagementId");

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.PromtionNature", "PromtionNature")
                        .WithMany("PromotionPartculars")
                        .HasForeignKey("PromtionNatureId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Rank", "Rank")
                        .WithMany("PromotionPartculars")
                        .HasForeignKey("RankId")
                        .OnDelete(DeleteBehavior.ClientCascade);
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.PublicationInfo", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformation", "EmployeeInformation")
                        .WithMany("PublicationInfos")
                        .HasForeignKey("EmployeeInformationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.ServiceHistory", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformation", "EmployeeInformation")
                        .WithMany("ServiceHistories")
                        .HasForeignKey("EmployeeInformationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.SpouseInformation", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.District", "District")
                        .WithMany("SpouseInformation")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Division", "Division")
                        .WithMany("SpouseInformation")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformation", "EmployeeInformation")
                        .WithMany("SpouseInformation")
                        .HasForeignKey("EmployeeInformationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.TrainingInformation", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformation", "EmployeeInformation")
                        .WithMany("TrainingInformation")
                        .HasForeignKey("EmployeeInformationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.TrainingInformationManagement", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformation", "EmployeeInformation")
                        .WithMany("TrainingInformationManagements")
                        .HasForeignKey("EmployeeInformationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.TrainingInformationManagementMaster", "TrainingInformationManagementMaster")
                        .WithMany("TrainingInformationManagements")
                        .HasForeignKey("TrainingInformationManagementMasterId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.TrainingInformationManagementMaster", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.TrainingManagementType", "TrainingManagementType")
                        .WithMany("TrainingInformationManagementMasterLists")
                        .HasForeignKey("TrainingManagementTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.CountryTrainingManagementTypeMap", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.TrainingManagementType", "TrainingManagementType")
                        .WithMany("CountryTrainingManagementTypeMaps")
                        .HasForeignKey("TrainingManagementTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.Designation", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.DesignationClass", "DesignationClasses")
                        .WithMany("Designations")
                        .HasForeignKey("DesignationClassId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Rank", "Rank")
                        .WithMany("Designations")
                        .HasForeignKey("RankId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.District", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Division", "Division")
                        .WithMany("Districts")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.LeaveTypeInformation", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.CalculationMethod", "CalculationMethod")
                        .WithMany("LeaveTypeInformations")
                        .HasForeignKey("CalculationMethodId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.PayScalePerGrade", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Rank", "Rank")
                        .WithMany("PayScalePerGrades")
                        .HasForeignKey("RankId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.PoliceStation", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.District", "District")
                        .WithMany("PoliceStations")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.Posting", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.PostingType", "PostingType")
                        .WithMany("Postings")
                        .HasForeignKey("PostingTypeId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.TrainingManagementType", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId");

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Upazilla", "Upazilla")
                        .WithMany()
                        .HasForeignKey("UpazillaId");
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.Upazilla", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.District", "District")
                        .WithMany("Upazillas")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.GeneralSetup.WeeklyHolydaySetup", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Years", "Years")
                        .WithMany()
                        .HasForeignKey("YearsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTSL.DgFood.Common.Entity.User", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformation", "EmployeeInformation")
                        .WithOne("User")
                        .HasForeignKey("PTSL.DgFood.Common.Entity.User", "EmployeeInformationId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("PTSL.DgFood.Common.Entity.UserGroup", "Group")
                        .WithMany("Users")
                        .HasForeignKey("GroupID");

                    b.HasOne("PTSL.DgFood.Common.Entity.PmsGroup", "PmsGroup")
                        .WithMany()
                        .HasForeignKey("PmsGroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.UserRoles", null)
                        .WithMany("Users")
                        .HasForeignKey("UserRolesId");
                });

            modelBuilder.Entity("PTSL.DgFood.Web.Model.LanguageInformation", b =>
                {
                    b.HasOne("PTSL.DgFood.Common.Entity.EmployeeManagementEntity.EmployeeInformation", "EmployeeInformation")
                        .WithMany("LanguageInformations")
                        .HasForeignKey("EmployeeInformationId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PTSL.DgFood.Common.Entity.GeneralSetup.Language", "Language")
                        .WithMany("LanguageInformation")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
