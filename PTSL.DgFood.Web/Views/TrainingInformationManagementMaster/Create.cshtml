@model IEnumerable<PTSL.DgFood.Web.Model.EmployeeInformationListVM>
@{
    ViewBag.Title = "Index";
    var RoleName = Session["RoleName"].ToString();

}
<!--Modal Start-->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">

        <form id="OtherMemberForm" class="card-body mt-2 green-card">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Other Member Information</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body row">
                    <input type="number" id="myTrainingManagementTypeId" hidden />
                    <div class="form-group col-md-6">
                        <label>
                            Gender<span style="color:red">*</span>
                        </label>
                        @Html.DropDownList("GenderId", null, "Choose Gender", htmlAttributes: new { @class = "form-control col-md-12", @required = "required" })
                    </div>
                    <div class="form-group col-md-6">
                        <label>
                            Name<span style="color:red">*</span>
                        </label>
                        <input type="text" name="Name" id="Name" class="form-control" placeholder="Enter Name" required />
                    </div>
                    <div class="form-group col-md-6">
                        <label>
                            Email<span style="color:red">*</span>
                        </label>
                        <input type="email" name="Email" id="Email" class="form-control" placeholder="Enter Email" required />
                    </div>
                    <div class="form-group col-md-6">
                        <label>
                            Phone<span style="color:red">*</span>
                        </label>
                        <input type="text" name="Phone" id="Phone" class="form-control" placeholder="Enter Phone" required />
                    </div>
                    <div class="form-group col-md-6">
                        <label>
                            Address/Workplace<span style="color:red">*</span>
                        </label>
                        <input type="text" name="AddressOrWorkplace" id="AddressOrWorkplace" class="form-control" placeholder="Enter Address/Workplace" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button onclick="saveOtherMemberInfo()" type="button" class="btn btn-primary">Save</button>
                </div>
            </div>
         </form>

    </div>
</div>
<!--Modal End-->

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <div class="col-md-12">
                    <h4>Training Management</h4>
                </div>
            </div>

            <div class="card-body">
                @using (Html.BeginForm("Create", "TrainingInformationManagementMaster", FormMethod.Post, new { id = "EmployeeInformationForm", enctype = "multipart/form-data" }))
                {
                    <div class="row">
                        <div class="form-row col-md-12">
                            <div class="form-group col-md-6">
                                <label for="inputNationalID">Posting Type </label>
                                @Html.DropDownList("PostingTypeId", (SelectList)ViewBag.PostingTypeId, "Choose..", htmlAttributes: new { @class = "form-control" })
                            </div>
                            <div class="form-group col-md-6">
                                <label for="inputRank">Posting Place </label>
                                @Html.DropDownList("PostingId", (SelectList)ViewBag.PostingId, "Choose..", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-row col-md-12">
                            <div class="form-group col-md-6">
                                <label for="inputNationalID">Rank </label>
                                @Html.DropDownList("RankId", (SelectList)ViewBag.RankId, "Choose..", htmlAttributes: new { @class = "form-control" })
                            </div>
                            <div class="form-group col-md-6">
                                <label for="inputRank">Designation </label>
                                @Html.DropDownList("DesignationId", (SelectList)ViewBag.DesignationId, "Choose..", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-row col-md-12">
                            <div class="form-group col-md-6">
                                <label for="inputNationalID">Division </label>
                                @Html.DropDownList("DivisionId", (SelectList)ViewBag.DivisionId, "Choose..", htmlAttributes: new { @class = "form-control" })
                            </div>
                            <div class="form-group col-md-6">
                                <label for="inputRank">District </label>
                                @Html.DropDownList("DistrictId", (SelectList)ViewBag.DistrictId, "Choose..", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-row col-md-12">
                            <div class="form-group col-md-6">
                                <label for="inputRank">Police Station </label>
                                @Html.DropDownList("PoliceStationId", (SelectList)ViewBag.PoliceStationId, "Choose..", new { @class = "form-control" })
                            </div>
                            <div class="form-group col-md-6">
                                <label for="inputNationalID">Employee Id </label>
                                <input type="text" name="Id" id="Id" class="form-control" />
                            </div>
                        </div>
                        <div class="form-row col-md-12">
                            <div class="form-group col-md-6">

                            </div>
                            <div class="form-group col-md-6">
                                <label for="inputNationalID"></label>
                                <input class="btn btn-success" type="submit" name="Search" id="Search" value="Search" style="margin-top:25px;" />
                            </div>
                        </div>



                    </div>
                }
                <div class="row mt-5">
                    <div class="form-row col-md-12">
                        <div class="form-group col-md-6">
                            <label for="inputNationalID">Training Name <span style="color:red;">*</span></label>
                            @*@Html.DropDownList("TrainingManagementTypeId", (SelectList)ViewBag.TrainingManagementTypeId, "Choose..", htmlAttributes: new { @class = "form-control", @required = "required" })*@
                            <select class="form-control col-md-7" name="TaxableItemType" id="TrainingManagementTypeId" aria-label="Select Taxable Item Type">
                                @{
                                    if (ViewBag.TrainingManagementTypes != null)
                                    {
                                        foreach (var training in ViewBag.TrainingManagementTypes)
                                        {
                                            var trainingTrainingPlan = string.IsNullOrEmpty(training.TrainingPlan) ? "" : $"Plan: {training.TrainingPlan}";

                                            var trainingBatch = string.IsNullOrEmpty(training.TrainingBatch) ? "" : $" Batch: {training.TrainingBatch}";
                                            var trainingLocationType = (int)training.TrainingLocationType == 1 ? " - Local" : " - Foreign";
                                            <option value="@training.Id">@trainingTrainingPlan, Title: @training.TrainingTitle, @trainingBatch, @trainingLocationType</option>
                                        }
                                    }
                                }
                            </select>
                        </div>
                        <div class="form-group col-md-3">
                            <label>Bulk training upload</label>
                            <div>
                                <input id="BulkUploadTraining" type="file" class="form-control" />
                            </div>
                        </div>
                        <div class="form-group col-md-3">
                            <label>&nbsp;</label>
                            <br />
                            <button id="BulkUploadTrainingButton" type="button" class="btn btn-outline-primary">Upload Bulk</button>
                        </div>
                    </div>
                </div>
                <div class="table-responsive">
                    <a onclick="getTrainingManagementTypeInfo()" style="color: white; float: right; margin-left: 10px; margin-bottom: 10px;" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#exampleModal">
                        Add Other Member
                    </a>

                    <label class="pull-right"><input type="checkbox" id="checkAll" /> Select all</label><span>    </span>
                    <table class="table table-striped table-bordered table-hover" id="EmployeeTable" style="width:100%;">
                        <thead>
                            <tr>
                                @*<th>SL</th>*@
                                <th style="width:10%">Emp Id</th>
                                <th style="width:20%">Name</th>
                                <th style="width:10%">DOB</th>
                                <th style="width:10%">Designation</th>
                                <th style="width:10%">Grade</th>
                                <th style="width:10%">By Prom/ Recruit</th>
                                <th style="width:10%">Original Posting Place</th>
                                <th style="width:10%">Mobile No.</th>
                                <th style="width: 130px;">Action</th>
                            </tr>
                        </thead>
                        @{
                            int i = 1;
                        }
                        <tbody>
                            @if (Model != null)
                            {
                                foreach (var data in Model)
                                {
                                    <tr>
                                        @*<td>@i</td>*@
                                        <td>@data.Id</td>
                                        <td>@data.NameEnglish</td>
                                        <td>@data.DateOfBirth.ToString("dd-MM-yyyy")</td>
                                        <td>@data.DesignationName</td>
                                        <td>@data.RankName</td>
                                        <td>@data.RecruitPromo</td>
                                        <td>@data.PostingPlace</td>
                                        <td>@data.MobileNumber</td>
                                        <td style="float:left;width: 130px;">
                                            <span class="pull-right"><input type="checkbox" id="all-package-chk" onclick="SetEmployeeId(@data.Id)" /> Check</span>
                                        </td>
                                    </tr>
                                    i++;
                                }
                            }
                        </tbody>
                    </table>
                </div>
                <div style="display: flex; justify-content: flex-end; gap: 5px;">
                    <button type="button" onclick="SuggestEmployee()" class="btn btn-warning pull-right">Suggest</button>
                    <button onclick="SaveFormData()" class="btn btn-primary pull-right">Save</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade modalC" id="PromotionformModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content" style="min-width:980px;margin-left:-48%;border:1px solid white!important;border-radius:5px">
            <div class="modal-header">
                <h6 class="modal-title"><b>Employee Promotion Form</b></h6>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <input type="text" id="detaileID" hidden>
            <div class="modal-body" id="ModalContent">

            </div>
            <div class="modal-footer">
                <button onclick="SaveFormData()" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>

<script>
    var TrainingInformationManagementMasterVM = {};
    var EmployeeIds = [];
    $(document).ready(function () {
        $("#checkAll").change(function () {
            if ($(this).prop('checked') == true) {
                EmployeeIds = [];
                var terf = document.getElementById('EmployeeTable');
                var firstChilds = terf.querySelectorAll("td:first-child");
                //var allName = [];
                for (i = 0; i < firstChilds.length; ++i) {
                    EmployeeIds.push(firstChilds[i].innerHTML);
                }

                console.log(EmployeeIds);

                $("input:checkbox").prop('checked', $(this).prop("checked"));
            }
            else {
                EmployeeIds = [];
                console.log(EmployeeIds);
                $("input:checkbox").prop('checked', $(this).prop("checked"));
            }
        });
    });


    function SetEmployeeId(id) {
        const index = EmployeeIds.indexOf(id);
        if (index > -1) {
            EmployeeIds.splice(index, 1);
        }
        else {
            EmployeeIds.push(id);
        }
        console.log(EmployeeIds);
    }
    $("#RankId").change(function () {
        var selectedItem = $(this).val();
        var ddlDesignation = $("#DesignationId");
        if (selectedItem == "" || selectedItem == null) {
            return true;
        }
        $.ajax({
            cache: false,
            type: "GET",
            url: "/Dropdown/GetDesignationDropdownByRankId",
            data: { "id": selectedItem },
            success: function (data) {
                console.log(data);
                ddlDesignation.html('<option value="">Choose..</option>');
                $.each(data, function (id, option) {
                    ddlDesignation.append($('<option></option>').val(option.Id).html(option.DesignationName));
                });
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert('Failed to retrieve states.');
            }
        });
    });
    function PromotionForm(id) {
        var options = { "backdrop": "static", keyboard: true };
        $.ajax({
            type: "GET",
            url: '/PromotionManagement/PromotionFormPartial',
            contentType: "application/json; charset=utf-8",
            data: { "id": id },
            datatype: "json",
            success: function (data) {
                $('#ModalContent').html(data);
                $('#PromotionformModal').modal(options);
                $('#PromotionformModal').modal('show');
            },
            error: function () {
                alert("Dynamic content load failed.");
            }
        });
    }

    function SaveFormData() {
        debugger;
        var TrainingManagementTypeId = $("#TrainingManagementTypeId").val();
        var Institute = $("#Institute").val();
        var Location = $("#Location").val();
        if (TrainingManagementTypeId == "" || TrainingManagementTypeId == null) {
            swal("Please select Training Name");
        }
        else if (EmployeeIds.length <= 0) {
            swal("Please select at least one Employee");
        }
        else {
            TrainingInformationManagementMasterVM.TrainingManagementTypeId = TrainingManagementTypeId;
            TrainingInformationManagementMasterVM.Institute = Institute;
            TrainingInformationManagementMasterVM.Location = Location;
            TrainingInformationManagementMasterVM.EmployeeInformationIds = EmployeeIds;

            var dataObject = TrainingInformationManagementMasterVM;

            $.ajax({
                type: "POST",
                url: "/TrainingInformationManagementMaster/PostFormData",
                data: JSON.stringify(dataObject),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    if (response == true) {
                        swal("Data Saved Successfully !");
                        showSendSmsConfirmMessage(dataObject);
                        //location.href = "/TrainingInformationManagementMaster/Index";

                    }
                    else {
                        swal("Data Saved Failed !");
                    }
                },
                failure: function (response) {
                    swal("Data Saved Failed !");
                },
                error: function (response) {
                    swal("Data Saved Failed !");
                }
            });
        }
    }


    function showSendSmsConfirmMessage(dataObject) {
        debugger
        swal({
            title: "Do you want to notify the employee about training?",
            text: "Employee will get a SMS notification!",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes, Send SMS!",
            closeOnConfirm: false
        }, function () {

            var data = [];

            for (var item of dataObject.EmployeeInformationIds) {
                var obj = {
                    MessageBody: "",
                    MessageSubject: "",
                    IsEmail: false,
                    IsSMS: true,
                    EmployeeInformationId: item,
                    TrainingManagementTypeId: dataObject.TrainingManagementTypeId
                };
                data.push(obj);
            }


            debugger
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                url: "/TrainingInformationManagementMaster/SendSMS",
                data: JSON.stringify(data),
                datatype: "json",
                success: function (result) {
                    console.log(result);
                    var message = result.Message;
                    var executionState = result.executionState;
                    if (executionState != null) {
                        if (executionState != 10) {
                            swal("Sent!", "Your imaginary file has been deleted.", "success");
                        }
                        else {
                            swal("Send Failed!", message, "error");
                        }

                        $(".confirm").on('click', function () {
                            window.location.reload();
                        });
                    }
                },
                error: function (xmlhttprequest, textstatus, errorthrown) {
                    swal("Not Sent!", "SMS has not been sent.", "error");
                }
            });
        });
    }

    $(function () {


        $("#DivisionId").change(function () {
            var selectedItem = $(this).val();
            var ddlDistrict = $("#DistrictId");
            if (selectedItem == "" || selectedItem == null) {
                return true;
            }
            $.ajax({
                cache: false,
                type: "GET",
                url: "/dropdown/GetDistrictDropdownByDivisionId",
                data: { "divisionId": selectedItem },
                success: function (data) {
                    ddlDistrict.html('<option>Choose..</option>');
                    $.each(data, function (id, option) {
                        ddlDistrict.append($('<option></option>').val(option.Id).html(option.DistrictName));
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve states.');
                }
            });
        });

        $("#DistrictId").change(function () {
            var selectedItem = $(this).val();
            var ddlDistrict = $("#PoliceStationId");
            if (selectedItem == "" || selectedItem == null) {
                return true;
            }
            $.ajax({
                cache: false,
                type: "GET",
                url: "/Dropdown/GetPoliceStationDropdownByDistrictId",
                data: { "districtId": selectedItem },
                success: function (data) {
                    ddlDistrict.html('<option>Choose..</option>');
                    $.each(data, function (id, option) {
                        ddlDistrict.append($('<option></option>').val(option.Id).html(option.PoliceStationName));
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve states.');
                }
            });
        });

        $("#BulkUploadTrainingButton").on("click", function () {
            var uploadedFiles = document.querySelector("#BulkUploadTraining");

            var formData = new FormData();
            formData.append("files", uploadedFiles.files[0]);

            $.ajax({
                url: '/TrainingInformationManagementMaster/BulkUploadTraining',
                type: 'POST',
                data: formData,
                async: false,
                cache: false,
                contentType: false,
                enctype: 'multipart/form-data',
                processData: false,
                success: function (response) {
                    alert(response.message);
                }
            });

        });
    });

    function SuggestEmployee() {
        console.log(EmployeeIds);
    }
</script>

<script>
    function getTrainingManagementTypeInfo() {
        var trainingManagementTypeId = $("#TrainingManagementTypeId").val();
        $("#myTrainingManagementTypeId").val(trainingManagementTypeId);
        //alert(trainingManagementTypeId);
    }

    function saveOtherMemberInfo() {
        //alert(GenderId);
        var genderId = $("#GenderId").val();
        var name = $("#Name").val();
        var email = $("#Email").val();
        var phone = $("#Phone").val();
        var address = $("#AddressOrWorkplace").val();

        if (genderId <= 0) {
            alert("Gender Not Select!");
            return;
        }
        if (name.length <= 0) {
            alert("Pleas Enter Name!");
            return;
        }
        if (email.length <= 0) {
            alert("Pleas Enter Email!");
            return;
        }
        if (phone.length <= 0) {
            alert("Pleas Enter Phone!");
            return;
        }
        if (address.length <= 0) {
            alert("Pleas Enter Address!");
            return;
        }



        var formData = new FormData();
        formData.append('TrainingManagementTypeId', $("#TrainingManagementTypeId").val());
        formData.append('GenderId', $("#GenderId").val());
        formData.append('Name', $("#Name").val());
        formData.append('Email', $("#Email").val());
        formData.append('Phone', $("#Phone").val());
        formData.append('AddressOrWorkplace', $("#AddressOrWorkplace").val());

        $.ajax({
            url: '/TrainingInformationManagementMaster/SaveOtherMember',
            type: 'POST',
            data: formData,
            async: false,
            cache: false,
            contentType: false,
            enctype: 'multipart/form-data',
            processData: false,
            success: function (response) {
                //$("#myTrainingManagementTypeId").val("");
                //$("#GenderId").val("");
                $("#Name").val("");
                $("#Email").val("");
                $("#Phone").val("");
                $("#AddressOrWorkplace").val("");

                alert("Other Member Save Successfully!");
                $("#exampleModal").modal("hide");
            }
        });


    }

</script>